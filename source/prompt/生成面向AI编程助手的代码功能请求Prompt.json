{
  "元信息": {
    "用途": "生成面向AI编程助手的代码功能请求Prompt",
    "版本": "2.0",
    "适用模型": "GPT/Claude/通义千问等代码模型"
  },
  "代码任务规范": {
    "编程语言": ["Python/JavaScript/Java等", "需指定版本号如Python3.9+"],
    "功能类型": {
      "开发类": ["函数实现", "类设计", "算法实现"],
      "调试类": ["错误修复", "性能优化"],
      "工程类": ["API开发", "数据库交互", "并发处理"]
    },
    "输入输出": {
      "输入示例": "参数格式示例（如：{'nums': [1,2,3], 'target': 5}）",
      "输出要求": ["返回类型", "时间复杂度约束", "内存限制"]
    }
  },
  "质量要求": {
    "代码规范": {
      "命名风格": "PEP8/camelCase/snake_case",
      "注释要求": ["函数docstring", "关键算法注释"],
      "异常处理": ["需处理的异常类型", "错误消息格式"]
    },
    "测试用例": {
      "单元测试": "要求提供pytest/unittest示例",
      "边界条件": ["空输入处理", "极值测试"],
      "性能测试": "指定输入规模要求"
    }
  },
  "上下文增强": {
    "技术栈": ["相关框架/库版本（如TensorFlow2.x）"],
    "约束条件": ["禁止使用的语法/库", "必须遵循的设计模式"],
    "参考代码": "相似功能的代码片段（可选）"
  },
  "验证体系": {
    "静态检查": ["通过flake8检测", "mypy类型检查"],
    "动态验证": {
      "输入输出对": [
        {"输入": "示例1", "预期输出": "结果1"},
        {"输入": "示例2", "预期输出": "结果2"}
      ]
    },
    "抗幻觉检测": "要求模型对不确定的API用法进行标注"
  },
  "输出模板": {
    "代码结构": "函数定义→核心逻辑→异常处理→返回语句",
    "附带说明": ["算法思路解释", "可能的优化方向"],
    "交付格式": "Markdown代码块/GitHub Gist链接/可执行文件"
  },
  "异常处理": {
    "模糊需求": "要求模型主动询问：1) 边界条件 2) 默认行为 3) 兼容性要求",
    "知识盲区": "当遇到过时API时应提示替代方案"
  }
}